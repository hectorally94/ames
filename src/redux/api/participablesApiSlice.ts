import apiServices from "../../common/apiServices";

// Define the interfaces for Participable and ParticipableDto
export interface Participable {
  id: number;
  description: string;
}

export interface ParticipableDto {
  id: number;
  description: string;
  languageId: number;
  name: string;
}

// Define the tag types
export const PARTICIPABLE_TAGS = ['Participables'] as const;

// Enhance the API service with additional tag types
const participablesApiSlice = apiServices
  .enhanceEndpoints({
    addTagTypes: PARTICIPABLE_TAGS,
  })
  .injectEndpoints({
    endpoints: (builder) => ({
    
      // Endpoint to fetch all participable DTOs
      getAllParticipablesDtos: builder.query<ParticipableDto[], string>({
        query: (name) => ({
          url: `/participablesAllFilter`,
          method: 'GET',
          params: { name }, // Pass the languageName as a query parameter
        }),
        providesTags: [PARTICIPABLE_TAGS[0]], // Tag for the list of participable DTOs
      }),
    }),
    overrideExisting: false,
  });

// Export hooks generated by createApi for each endpoint
export const {
  useGetAllParticipablesDtosQuery,
} = participablesApiSlice;

// Default export for the slice
export default participablesApiSlice;

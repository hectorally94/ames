import apiServices from "../../common/apiServices";

// Define the interface for Impact
export interface Impact {
  id: number;
  title: string;
  description: any;
}

// Define the DTO interface for Impact
export interface ImpactDto {
  id: number;
  title: string;
  description: any;
  languageId: number;
  languageName: string;
}

// Define the tag types
export const IMPACT_TAGS = ['Impacts'] as const;

// Enhance the API service with additional tag types
const impactsApiSlice = apiServices
  .enhanceEndpoints({
    addTagTypes: IMPACT_TAGS,
  })
  .injectEndpoints({
    endpoints: (builder) => ({
      // Endpoint to fetch all impacts
      getAllImpacts: builder.query<Impact[], string>({
        query: (languageName) => ({
          url: `/impactsAllFilter`,
          method: 'GET',
          params: { languageName }, // Pass the languageName as a query parameter
        }),
        providesTags: [IMPACT_TAGS[0]], // Tag for the list of impacts
      }),
    }),
    overrideExisting: false,
  });

// Export hooks generated by createApi for each endpoint
export const {
  useGetAllImpactsQuery,
} = impactsApiSlice;

// Default export for the slice
export default impactsApiSlice;
